 DROP ATABASE USERDB;

CREATE DATABASE USERDB;

USE USERDB;

CREATE TABLE UserDB.`user_mast` (
  `USER_ID` int NOT NULL AUTO_INCREMENT,
  `USER_NAME` varchar(30) DEFAULT NULL,
  `USER_LOC` varchar(50) DEFAULT NULL,
  `USER_EMAIL` varchar(30) DEFAULT NULL,
  `USER_DOB` date DEFAULT NULL,
  `USER_TYPE` varchar(10) DEFAULT NULL,
  `ACTIVE` varchar(5) DEFAULT NULL,
  `USER_PASSWORD` longtext CHARACTER SET latin1 COLLATE latin1_swedish_ci,
  PRIMARY KEY (`USER_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_SELECT;
CREATE PROCEDURE USERDB.`SP_USER_SELECT`(a_USER_ID INT)
BEGIN
    IF(a_USER_ID != 0) THEN
        SELECT USER_ID, USER_NAME, USER_LOC, USER_EMAIL, 
          DATE_FORMAT(USER_DOB, '%d/%m/%Y') AS USER_DOB,
          USER_TYPE, ACTIVE FROM USER_MAST 
        WHERE USER_ID = a_USER_ID;
    ELSE
        SELECT USER_ID, USER_NAME, USER_LOC, USER_EMAIL, 
          DATE_FORMAT(USER_DOB, '%d/%m/%Y') AS USER_DOB,
          USER_TYPE, ACTIVE FROM USER_MAST 
        ORDER BY USER_ID DESC;
    END IF;
END;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_INSERT;
CREATE PROCEDURE USERDB.`SP_USER_INSERT`( 
										s_USER_NAME VARCHAR(30), 
										s_USER_LOC VARCHAR(30), 
										s_USER_EMAIL VARCHAR(50), 
										s_USER_DOB VARCHAR(10),
										s_USER_TYPE VARCHAR(10), 
										s_USER_ACTIVE VARCHAR(5), 
										s_USER_PASSWORD LONGTEXT)
BEGIN
  INSERT INTO USER_MAST 
  (
    USER_NAME, USER_LOC, USER_EMAIL, USER_DOB,
    USER_TYPE, ACTIVE, USER_PASSWORD
  )
  VALUES
  (
    TRIM(s_USER_NAME),
    TRIM(s_USER_LOC),
    TRIM(s_USER_EMAIL),
    TRIM(STR_TO_DATE(s_USER_DOB, '%d/%m/%Y')),
    TRIM(s_USER_TYPE),
    TRIM(s_USER_ACTIVE),
    TRIM(s_USER_PASSWORD)
  );

  SELECT ROW_COUNT(); 
END;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_UPDATE;
CREATE PROCEDURE USERDB.`SP_USER_UPDATE`( 
										s_USER_LOC VARCHAR(30), 
										s_USER_EMAIL VARCHAR(50), 
										s_USER_DOB VARCHAR(10),
										s_USER_TYPE VARCHAR(10), 
										s_USER_ACTIVE VARCHAR(5), 
										s_USER_PASSWORD LONGTEXT,
                    i_USER_ID INT)
BEGIN
  UPDATE USER_MAST SET  
              USER_LOC = TRIM(s_USER_LOC), 
              USER_EMAIL = TRIM(s_USER_EMAIL), 
              USER_DOB = TRIM(STR_TO_DATE(s_USER_DOB, '%d/%m/%Y')), 
              USER_TYPE = TRIM(s_USER_TYPE),
              ACTIVE = TRIM(s_USER_ACTIVE),
              USER_PASSWORD = TRIM(s_USER_PASSWORD)
        WHERE USER_ID = TRIM(i_USER_ID);
  SELECT ROW_COUNT(); 
END;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_DELETE;
CREATE PROCEDURE USERDB.`SP_USER_DELETE`(i_USER_ID INT)
BEGIN
  DELETE FROM USER_MAST 
  WHERE USER_ID = TRIM(i_USER_ID);
  
  SELECT ROW_COUNT(); 
END;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_INSERT_XML;
CREATE PROCEDURE USERDB.`SP_USER_INSERT_XML`(sXML LONGTEXT)
BEGIN
  DECLARE iCount INT DEFAULT 1;
  DECLARE iRowCount INT DEFAULT 0;
  
  SET iRowCount = EXTRACTVALUE(sXML, 'COUNT(//USER//ROWS)');
  
  WHILE iCount <= iRowCount DO
    INSERT INTO USER_MAST 
              (
                USER_NAME, USER_LOC, USER_EMAIL, USER_DOB,
                USER_TYPE, ACTIVE, USER_PASSWORD
              )
              VALUES
              (
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_NAME')),
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_LOC')),
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_EMAIL')),
                TRIM(STR_TO_DATE(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_DOB'), '%d/%m/%Y')),
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_TYPE')),
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_ACT')),
                TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_PWD'))
              );
    
    SET iCount = iCount + 1;
  END WHILE;
  SELECT ROW_COUNT();
END;

DROP PROCEDURE IF EXISTS USERDB.SP_USER_UPDATE_XML;
CREATE PROCEDURE USERDB.`SP_USER_UPDATE_XML`(sXML LONGTEXT)
BEGIN
  DECLARE iCount INT DEFAULT 1;
  DECLARE iRowCount INT DEFAULT 0;
  
  SET iRowCount = EXTRACTVALUE(sXML, 'COUNT(//USER//ROWS)');
  
  WHILE iCount <= iRowCount DO
    UPDATE USER_MAST SET  
                USER_LOC = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_LOC')), 
                USER_EMAIL = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_EMAIL')), 
                USER_DOB = TRIM(STR_TO_DATE(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_DOB'), '%d/%m/%Y')), 
                USER_TYPE = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_TYPE')), 
                ACTIVE = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_ACT')),
                USER_PASSWORD = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_PWD'))
    WHERE USER_ID = TRIM(EXTRACTVALUE(sXML, '//ROWS[$iCount]//USER_ID'));
    
    SET iCount = iCount + 1;
  END WHILE;
  SELECT ROW_COUNT();
END;





